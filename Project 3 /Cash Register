# Header
# DSC 510
# Week 11
# Programming Assignment Week 11
# Author Melissa Young
# 05/28/2022

"""
This week we’re going to demonstrate our knowledge of Python object-oriented programming concepts by creating a simple
cash register program.
    Your program must have a header.
    Your program must have a welcome message for the user.
    Your program must have one class called CashRegister.
        Your program will have an instance method called addItem which takes one parameter for price. The method should
        also keep track of the number of items in your cart.
        Your program should have two getter methods.
            getTotal – returns totalPrice
            getCount – returns the itemCount of the cart
    Your program must have a properly defined main function and a call to main.
    Your program must create an instance of the CashRegister class within your main function.
    Your program should have a loop in main which allows the user to continue to add items to the cart until they
    request to quit.
    Your program should print the total number of items in the cart.
    Your program should print the total $ amount of the cart.
        The output should be formatted as currency. Be sure to investigate the locale class. You will need to call
        locale.setlocale and locale.currency.
    Your program should adhere to PEP8 guidelines especially as it pertains to variable names.
"""

import locale


class CashRegister:  # Your program must have one class called CashRegister, class should have first letter capitalized.

    def __init__(self):
        self.cart = []
        self.charters = {
            1: {
                'charter': 1,
                'price': 450,
                'details': "6 Hours inshore fishing, 7am - 1pm"
            },
            2: {
                'charter': 2,
                'price': 500,
                'details': "6 Hours inshore fishing, lunch and drinks provided"
            },
            3: {
                'charter': 3,
                'price': 650,
                'details': "8 Hours offshore fishing, 7am - 3pm"
            },
            4: {
                'charter': 4,
                'price': 700,
                'details': "8 Hours offshore fishing, lunch and drinks provided"

            }
        }

    def print_charter(self):  # Print charter details for input request.
        for charter, item in self.charters.items():
            print(f'Charter:{charter} \t\tPrice:{item["price"]} \t\tDetails:{item["details"]}')

    def add_items(self, price):  # Your program must have an instance method called addItem.
        self.cart.append(price)

    # Your program should have two getter methods.
    @property  # Creates and returns a property object.
    def get_total(self):  # getTotal returns totalPrice.
        total_price = 0
        for item in self.cart:
            total_price += item['price']
        return total_price

    @property
    def get_count(self):  # getCount returns the itemCount of the cart.
        return len(self.cart)

    def clear_cart(self):
        self.cart = 0.0
        self.charters = 0


def main():
    register = CashRegister()  # Your program create CashRegister class within main function.
    print('Welcome to Young Fishing Charters, please choose from trips below.\n')  # Program must have welcome message.

    register.print_charter()

    # Your program should have a loop in main which allows the user to continue to add items to the cart until done.
    while True:
        order = input('\nAdd order to cart using numbers 1-4. Once done adding trip(s) to cart type "done": ').lower()

        if order == 'done':
            break

        elif int(order) in register.charters.keys():  # Error check for correct input.
            register.add_items(register.charters[int(order)])
            print(f'You have added Charter {order} to your cart, you have {register.get_count} trip(s) in total.')

        else:
            print('Please add numbers 1-4 or type "done" to end')
            continue

    cart_price = register.get_total
    cart_count = register.get_count

    locale.setlocale(locale.LC_ALL, 'en_US.utf-8')  # Format currency using locale.currency.
    formatted_total_cart_price = locale.currency(cart_price, grouping=True)

    print(f'\nTotal charter price: {formatted_total_cart_price}')  # Program should print the total $ amount of cart.
    print(f'Total charter count: {cart_count}')  # Program should print the total number of items in cart.
    print(f'Captain will reach out for scheduling, gratuity is very much appreciated!')


if __name__ == "__main__":
    main()
